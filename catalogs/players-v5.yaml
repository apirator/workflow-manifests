apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  description: A mock for the service
  name: players
spec:
  definition: |
    openapi: 3.0.0
    x-kong-name: players
    info:
        title: Bets - Players API
        version: 2.0.0
        contact:
            name: Apirator Dev Team
            email: apirator@apirator.io
        license:
            name: MIT License
            url: 'https://opensource.org/licenses/MIT'
    servers:
      - url: https://example.com
    paths:
        '/api/players/{id}':
            description: Find players data
            get:
                tags:
                    - players
                parameters:
                    -
                        name: id
                        description: Player ID
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/player'
                                examples:
                                    player:
                                        value:
                                            username: joe
                                            email: joe@doe.com
                        description: |
                            When player was found
                    '404':
                        content:
                            application/json:
                                examples:
                                    error:
                                        value:
                                            code: 404
                                            message: not found
                        description: 404 response
                operationId: get-player-by-id
                summary: Get Player Details
    components:
        schemas:
            player:
                title: Root Type for player
                description: Player Data
                type: object
                properties:
                    username:
                        type: string
                    email:
                        type: string
                example:
                    username: joe
                    email: joe@doe.com
  lifecycle: production
  owner: bets-team
  system: bets
  type: internal
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  description: A mock for the service
  name: players
spec:
  definition: |
    openapi: 3.0.0
    x-kong-name: players
    info:
        title: Bets - Players API
        version: 2.0.0
        contact:
            name: Apirator Dev Team
            email: apirator@apirator.io
        license:
            name: MIT License
            url: 'https://opensource.org/licenses/MIT'
    servers:
      - url: https://example.com
    paths:
        '/api/players/{id}':
            description: Find players data
            get:
                tags:
                    - players
                parameters:
                    -
                        name: id
                        description: Player ID
                        schema:
                            type: string
                        in: path
                        required: true
                responses:
                    '200':
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/player'
                                examples:
                                    player:
                                        value:
                                            username: joe
                                            email: joe@doe.com
                        description: |
                            When player was found
                    '404':
                        content:
                            application/json:
                                examples:
                                    error:
                                        value:
                                            code: 404
                                            message: not found
                        description: 404 response
                operationId: get-player-by-id
                summary: Get Player Details
    components:
        schemas:
            player:
                title: Root Type for player
                description: Player Data
                type: object
                properties:
                    username:
                        type: string
                    email:
                        type: string
                example:
                    username: joe
                    email: joe@doe.com
  lifecycle: production
  owner: bets-team
  system: bets
  type: internal
